
package UserInterface.SystemAdmin;

import Business.EcoSystem;
import Business.Network.CityNetwork;
import Business.Network.StateNetwork;
import java.awt.CardLayout;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author sanal
 */
public class ManageCityListJPanel extends javax.swing.JPanel {

    private final JPanel workContainer;
    private final EcoSystem business;
    /**
     * Creates new form ManageCityJPanel
     */
    public ManageCityListJPanel(JPanel workContainer, EcoSystem business) {
        initComponents();
        this.workContainer = workContainer;
        this.business = business;
        comboBoxStateList.removeAllItems();
        populateStateCombobox();
        populateTable();
    }
    
    private void populateStateCombobox(){
        
        for(StateNetwork state : business.getStateList())
        {
            comboBoxStateList.addItem(state);
        }
        
        
    }
    
    
    private void populateTable(){
        int rowCount = tblCityList.getRowCount();
        DefaultTableModel defaulttabelmodel = (DefaultTableModel)tblCityList.getModel();
        
        //delete rows
        for(int i=rowCount-1 ; i>=0; i--){
            defaulttabelmodel.removeRow(i);
        }
        
         //get State from combo box
        StateNetwork state = (StateNetwork)comboBoxStateList.getSelectedItem();
        if(state == null){
            return;
        }
        
        //populate the table
        for (CityNetwork city: state.getCityList()){
            Object[] row = new Object[1];
            row[0]=city;
            
            defaulttabelmodel.addRow(row);
            
        }
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        comboBoxStateList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCityList = new javax.swing.JTable();
        lblCityName = new javax.swing.JLabel();
        txtCityName = new javax.swing.JTextField();
        btnAddCityName = new javax.swing.JButton();
        btnRemoveCity = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(204, 255, 255));

        lblTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTitle.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage City");

        lblState.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblState.setForeground(new java.awt.Color(0, 0, 102));
        lblState.setText("State:");

        comboBoxStateList.setBackground(new java.awt.Color(0, 51, 153));
        comboBoxStateList.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        comboBoxStateList.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxStateList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxStateList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxStateListActionPerformed(evt);
            }
        });

        tblCityList.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        tblCityList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "City Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCityList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCityList);

        lblCityName.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblCityName.setForeground(new java.awt.Color(0, 0, 102));
        lblCityName.setText("City Name:");

        txtCityName.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N

        btnAddCityName.setBackground(new java.awt.Color(0, 51, 153));
        btnAddCityName.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        btnAddCityName.setForeground(new java.awt.Color(255, 255, 255));
        btnAddCityName.setText("Add City");
        btnAddCityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCityNameActionPerformed(evt);
            }
        });

        btnRemoveCity.setBackground(new java.awt.Color(0, 51, 153));
        btnRemoveCity.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        btnRemoveCity.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveCity.setText("Delete City");
        btnRemoveCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCityActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 102));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblState)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxStateList, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblCityName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddCityName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemoveCity)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddCityName, btnRemoveCity});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState)
                    .addComponent(comboBoxStateList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveCity)
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCityName)
                    .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddCityName, btnRemoveCity, lblCityName, txtCityName});

    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxStateListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxStateListActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_comboBoxStateListActionPerformed

    private void btnAddCityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCityNameActionPerformed
        // TODO add your handling code here:
        String city = txtCityName.getText();
         Pattern pattern = Pattern.compile("^[a-zA-Z]+$");
        
        if(city.trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please Enter a city Name!");
            return;

        }
         if (!(pattern.matcher(city).matches())) {
            JOptionPane.showMessageDialog(null, "Please enter a valid city Name");
            return;
        } 

        StateNetwork state = (StateNetwork)comboBoxStateList.getSelectedItem();

        for(CityNetwork c: state.getCityList())
        {
            if(c.getName().equalsIgnoreCase(city))
            {
                JOptionPane.showMessageDialog(null, "City exists!");
                return;
            }
        }

        state.addNewCity(city);
        populateTable();

    }//GEN-LAST:event_btnAddCityNameActionPerformed

    private void btnRemoveCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCityActionPerformed
        // TODO add your handling code here:
        int row = tblCityList.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a City from table");
            return;
        }

        CityNetwork city = (CityNetwork)tblCityList.getValueAt(row, 0);
        StateNetwork state = (StateNetwork)comboBoxStateList.getSelectedItem();
        state.removeCity(city);
        populateTable();

    }//GEN-LAST:event_btnRemoveCityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCityName;
    private javax.swing.JButton btnRemoveCity;
    private javax.swing.JComboBox comboBoxStateList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCityName;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCityList;
    private javax.swing.JTextField txtCityName;
    // End of variables declaration//GEN-END:variables
}
