
package UserInterface.SystemAdmin;

import Business.EcoSystem;
import Business.Disease.Disease;
import java.awt.CardLayout;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.regex.Pattern;
/**
 *
 * @author sanal
 */
public class AddNewDiseaseInfoJPanel extends javax.swing.JPanel {

    private final JPanel workContainer;
    private final EcoSystem business;
    /**
     * Creates new form AddNewDiseaseInfoJPanel
     * @param workContainer
     * @param business
     */
    public AddNewDiseaseInfoJPanel(JPanel workContainer, EcoSystem business) {
        initComponents();
        this.workContainer = workContainer;
        this.business = business;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateUpdateDate = new com.toedter.calendar.JDateChooser();
        lblLastUpdateDate = new javax.swing.JLabel();
        txtDiseaseCode = new javax.swing.JTextField();
        txtDiseaseName = new javax.swing.JTextField();
        btnAddDiseaseInformation = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblDiseaseCode = new javax.swing.JLabel();
        lblDiseaseName = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        jDateUpdateDate.setDateFormatString(" MMM, d yyyy");

        lblLastUpdateDate.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblLastUpdateDate.setForeground(new java.awt.Color(0, 0, 102));
        lblLastUpdateDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLastUpdateDate.setText("Last Updated on:");

        btnAddDiseaseInformation.setBackground(new java.awt.Color(0, 51, 153));
        btnAddDiseaseInformation.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        btnAddDiseaseInformation.setForeground(new java.awt.Color(255, 255, 255));
        btnAddDiseaseInformation.setText("Add Disease Informaion");
        btnAddDiseaseInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDiseaseInformationActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Enter Disease Details :");

        lblDiseaseCode.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblDiseaseCode.setForeground(new java.awt.Color(0, 0, 102));
        lblDiseaseCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDiseaseCode.setText("Disease Code:");

        lblDiseaseName.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblDiseaseName.setForeground(new java.awt.Color(0, 0, 102));
        lblDiseaseName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDiseaseName.setText("Disease Name:");

        btnBack.setBackground(new java.awt.Color(0, 51, 153));
        btnBack.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 628, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(lblDiseaseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLastUpdateDate)
                                .addGap(18, 18, 18)
                                .addComponent(jDateUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDiseaseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblDiseaseName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDiseaseName, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(btnAddDiseaseInformation)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiseaseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiseaseName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDiseaseName)
                            .addComponent(lblDiseaseCode))
                        .addGap(32, 32, 32)
                        .addComponent(lblLastUpdateDate))
                    .addComponent(jDateUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnAddDiseaseInformation)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddDiseaseInformation, jDateUpdateDate, txtDiseaseName});

    }// </editor-fold>//GEN-END:initComponents

    private void btnAddDiseaseInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDiseaseInformationActionPerformed
        // TODO add your handling code here:
        String diseaseCode = txtDiseaseCode.getText();
        Pattern pattern = Pattern.compile("^[a-zA-Z]+$");
        Pattern pattern2 = Pattern.compile("^[0-9]*");
        int count = 0;
        if(diseaseCode.trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter a disease Code");
            count = 1;
            return;

        }
        String diseaseName = txtDiseaseName.getText();
        if(diseaseName.trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter a disease Name");
             count = 1;
            return;

        }
        if (!(pattern2.matcher(diseaseCode).matches())) {
            JOptionPane.showMessageDialog(null, "Please enter a valid disease code");
             count = 1;
            return;
        } 
        
         if (!(pattern.matcher(diseaseName).matches())) {
            JOptionPane.showMessageDialog(null, "Please enter a valid disease Name");
             count = 1;
            return;
        } 
        
         if (Integer.valueOf(diseaseCode) < 0) {
            JOptionPane.showMessageDialog(null, "disease code is negative");
            count = 1;
            return;
        } 
             LocalDate dobValue = jDateUpdateDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(); // convert JDateChooser to LocalDate
            LocalDate today = LocalDate.now();
            
            if (dobValue == null) {
            JOptionPane.showMessageDialog(null, "Please enter your date.");
            return;
            }  else if (dobValue.isAfter(today)) {
                JOptionPane.showMessageDialog(null, "Invalid date. Date cannot be in the future.");
                return;
            } else if (dobValue.isEqual(today)) {
            JOptionPane.showMessageDialog(null, "Invalid date. Date cannot be today.");
            return;
            }  
        
        

        Date lastUpdatedDate = jDateUpdateDate.getDate();
        if(count ==0 )
        {
              for(Disease disease : business.getDiseaseDirectory().getdiseaseDirectory())
        {
            if(disease.getDiseaseCode().equalsIgnoreCase(diseaseCode) && disease.getDiseaseName().equalsIgnoreCase(diseaseName))
            {
                JOptionPane.showMessageDialog(null, "Disease already exists!");
                return;
            }
        }

        Disease disease = business.getDiseaseDirectory().addNewDisease();
        disease.setDiseaseCode(diseaseCode);
        disease.setDiseaseName(diseaseName);
        disease.setLastUpdatedTime(lastUpdatedDate);

        JOptionPane.showMessageDialog(null, "Disease added!");
        txtDiseaseCode.setText("");
        txtDiseaseName.setText("");
        jDateUpdateDate.setDate(null);
        }
      
        
        
    }//GEN-LAST:event_btnAddDiseaseInformationActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDiseaseInformation;
    private javax.swing.JButton btnBack;
    private com.toedter.calendar.JDateChooser jDateUpdateDate;
    private javax.swing.JLabel lblDiseaseCode;
    private javax.swing.JLabel lblDiseaseName;
    private javax.swing.JLabel lblLastUpdateDate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDiseaseCode;
    private javax.swing.JTextField txtDiseaseName;
    // End of variables declaration//GEN-END:variables
}
