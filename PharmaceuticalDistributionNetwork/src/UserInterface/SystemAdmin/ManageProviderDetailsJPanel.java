
package UserInterface.SystemAdmin;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Enterprise.EnterpriseType;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.CityNetwork;
import Business.Network.StateNetwork;
import java.awt.CardLayout;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanal
 */
public class ManageProviderDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageProviderDetailsJPanel
     */
    private final JPanel workContainer;
    private final EcoSystem business;
    
    public ManageProviderDetailsJPanel(JPanel workContainer, EcoSystem business ) {
        initComponents();
        this.workContainer = workContainer;
        this.business = business;
        populateTable();
        comboBoxStateList.removeAllItems();
        comboBoxCityList.removeAllItems();
        populateStateComboBox();
        
    }
    
    private void populateTable(){
        
        DefaultTableModel defaulttabelmodel = (DefaultTableModel) tblProviderDetails.getModel();
        defaulttabelmodel.setRowCount(0);
        
        for(StateNetwork state : business.getStateList())
        {
            for(CityNetwork city : state.getCityList())
            {
                for(Enterprise hospital :city.getEnterpriseDirectory().getEnterpriseDirectory())
                {
                    Object[] row = new Object[3];
                    row[0] = hospital;
                    row[1] = city;
                    row[2] = state;
                    defaulttabelmodel.addRow(row);
                }
            }
            
        }
        
        
        
    }
    
    private void populateStateComboBox(){
        
        for(StateNetwork state : business.getStateList())
        {
            comboBoxStateList.addItem(state);
        }
        
    }
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        comboBoxStateList = new javax.swing.JComboBox();
        lblCity = new javax.swing.JLabel();
        comboBoxCityList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProviderDetails = new javax.swing.JTable();
        btnRemoveProvider = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblProviderName = new javax.swing.JLabel();
        txtProviderName = new javax.swing.JTextField();
        btnAddProvider = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Providers");

        lblState.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblState.setForeground(new java.awt.Color(0, 0, 102));
        lblState.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblState.setText("State:");

        comboBoxStateList.setBackground(new java.awt.Color(0, 51, 153));
        comboBoxStateList.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        comboBoxStateList.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxStateList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxStateList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxStateListActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblCity.setForeground(new java.awt.Color(0, 0, 102));
        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCity.setText("City:");

        comboBoxCityList.setBackground(new java.awt.Color(0, 51, 153));
        comboBoxCityList.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        comboBoxCityList.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxCityList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblProviderDetails.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        tblProviderDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Provider Name", "City", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProviderDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblProviderDetails);
        if (tblProviderDetails.getColumnModel().getColumnCount() > 0) {
            tblProviderDetails.getColumnModel().getColumn(0).setResizable(false);
            tblProviderDetails.getColumnModel().getColumn(1).setResizable(false);
            tblProviderDetails.getColumnModel().getColumn(2).setResizable(false);
        }

        btnRemoveProvider.setBackground(new java.awt.Color(0, 51, 153));
        btnRemoveProvider.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        btnRemoveProvider.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveProvider.setText("Remove Provider");
        btnRemoveProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProviderActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 102));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 102));

        lblProviderName.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblProviderName.setForeground(new java.awt.Color(0, 0, 102));
        lblProviderName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblProviderName.setText("Provider Name:");

        txtProviderName.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N

        btnAddProvider.setBackground(new java.awt.Color(0, 51, 153));
        btnAddProvider.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        btnAddProvider.setForeground(new java.awt.Color(255, 255, 255));
        btnAddProvider.setText("Add Provider");
        btnAddProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProviderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProviderName)
                                    .addComponent(lblState, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxStateList, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProviderName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblCity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBoxCityList, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAddProvider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 681, Short.MAX_VALUE)
                        .addComponent(btnRemoveProvider))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCity, lblProviderName, lblState});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboBoxCityList, comboBoxStateList, txtProviderName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveProvider)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProviderName)
                    .addComponent(txtProviderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState)
                    .addComponent(comboBoxStateList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(comboBoxCityList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddProvider)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddProvider, comboBoxCityList, comboBoxStateList, txtProviderName});

    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProviderActionPerformed
        // TODO add your handling code here:
        int row = tblProviderDetails.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a Provider from table");
            return;
        }
        
        HospitalEnterprise hospital = (HospitalEnterprise)tblProviderDetails.getValueAt(row, 0);
        CityNetwork city = (CityNetwork)tblProviderDetails.getValueAt(row, 1);
         city.getEnterpriseDirectory().removeEnterprise(hospital);
        
        populateTable();
    }//GEN-LAST:event_btnRemoveProviderActionPerformed

    private void comboBoxStateListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxStateListActionPerformed
        // TODO add your handling code here:
        comboBoxCityList.removeAllItems();
        if (comboBoxStateList.getSelectedItem() == null) {
            return;
        }
        
        StateNetwork state = (StateNetwork)comboBoxStateList.getSelectedItem();
        
        for(CityNetwork city : state.getCityList())
        {
            comboBoxCityList.addItem(city);
        }
        
    }//GEN-LAST:event_comboBoxStateListActionPerformed

    private void btnAddProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProviderActionPerformed
        // TODO add your handling code here:
        Pattern pattern = Pattern.compile("^[a-zA-Z]+$");
        String name = txtProviderName.getText();
        if(name.trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter a Provider name!");
            return;
        }
        
        
         if(!(pattern.matcher(name.trim()).matches()))
        {
            JOptionPane.showMessageDialog(null, "Please enter a Provider name!");
            return;
        }
         
         
         
        
        
        StateNetwork state = (StateNetwork)comboBoxStateList.getSelectedItem();
        CityNetwork city = (CityNetwork)comboBoxCityList.getSelectedItem();
        
        for(Enterprise enterprise: city.getEnterpriseDirectory().getEnterpriseDirectory())
        {
            if(enterprise instanceof HospitalEnterprise)
            {
                HospitalEnterprise hosp =(HospitalEnterprise)enterprise;
                if(hosp.getName().equalsIgnoreCase(name))
                {
                    JOptionPane.showMessageDialog(null, "Provider already exists in the city!");
            return;
                }
            }
        }
        
        city.getEnterpriseDirectory().addEnterprise(name, EnterpriseType.Hospital);
        
        populateTable();
        
        
    }//GEN-LAST:event_btnAddProviderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProvider;
    private javax.swing.JButton btnRemoveProvider;
    private javax.swing.JComboBox comboBoxCityList;
    private javax.swing.JComboBox comboBoxStateList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblProviderName;
    private javax.swing.JLabel lblState;
    private javax.swing.JTable tblProviderDetails;
    private javax.swing.JTextField txtProviderName;
    // End of variables declaration//GEN-END:variables
}
