/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Provider;

import Business.EcoSystem;
import Business.Clinic.Clinic;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import Business.Vaccine.VaccineDetails;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anzal
 */
public class ViewInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewInventoryJPanel
     */
    private final JPanel workContainer;
    private final EcoSystem business;
    private final HospitalEnterprise hospitalEnterprise;
    private final HospitalOrganization hospitalOrganization;
    private Clinic clinic;
    
    DefaultTableModel tblModel;

    public ViewInventoryJPanel(JPanel workContainer, EcoSystem business, HospitalEnterprise hospitalEnterprise, HospitalOrganization hospitalOrganization) {
        initComponents();
        this.workContainer = workContainer;
        this.business = business;
        this.hospitalEnterprise = hospitalEnterprise;
        this.hospitalOrganization = hospitalOrganization;
        populateOrderTable();

    }

    private void populateOrderTable() {

        int rowCount = tbldetails.getRowCount();
        tblModel = (DefaultTableModel) tbldetails.getModel();

        for (int i = rowCount - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
        for (Organization organize : hospitalEnterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organize instanceof HospitalOrganization) {
                HospitalOrganization hospOrg = (HospitalOrganization) organize;
                for (VaccineDetails product : hospOrg.getClinic().getVaccineInventoryClinic()) {
                    Object[] row = new Object[7];

                    row[0] = product;
                    row[1] = product.getVaccineDefinition().getVaccineName();
                    row[2] = product.getManufacturerName();
                    row[3] = product.getVaccineId();
                    row[4] = product.getBatchId();
                    row[5] = product.getAvailablity();
                    row[6] = product.getManufactureDate();
           

                    tblModel.addRow(row);

                }
            }
        }
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbldetails = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Inventory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 930, 40));

        tbldetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Code", "Medicine Name", "Brand", "Medicine ID", "Batch ID", "Quantity", "Manufacture Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbldetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbldetails);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 132, 930, 220));

        btnRefresh.setBackground(new java.awt.Color(0, 0, 102));
        btnRefresh.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 80, 120, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 102));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 363, 930, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateOrderTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbldetails;
    // End of variables declaration//GEN-END:variables
}
