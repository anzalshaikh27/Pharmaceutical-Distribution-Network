/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.EnterpriseAdmin;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.ClinicOrganization;
import Business.Person.Person;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anzal
 */
public class ManagePersonJPanel extends javax.swing.JPanel {

    private final JPanel workContainer;
    private final Enterprise enterprise;
    
    DefaultTableModel tblModel;
    
    /**
     * Creates new form ManagePersonJPanel
     * @param workContainer
     * @param enterprise
     */
    public ManagePersonJPanel(JPanel workContainer, Enterprise enterprise ) {
        initComponents();
        this.workContainer = workContainer;
        this.enterprise = enterprise;
        populatePersonTable();
        
        
    }
    
    private void populatePersonTable(){
        
        tblModel = (DefaultTableModel) tblPersonDetails.getModel();
        
        tblModel.setRowCount(0);
        
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
        {   
            for(Person person: organization.getPersonDirectory().getPeopleList())
            {
                Object[] rowData = new Object[5];
            rowData[0] = person;
            rowData[1] = person.getEmail();
            rowData[2] = person.getPhone();
            rowData[3] = person.getDateOfBirth();
            if(organization instanceof ClinicOrganization)
            {
                ClinicOrganization satOrg =(ClinicOrganization)organization;
                rowData[4] = satOrg.getClincName()+"Clinic";
            }
            else 
                rowData[4] = organization;
           
            
            tblModel.addRow(rowData);
            }
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManagePersons = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonDetails = new javax.swing.JTable();
        btnCreateNewPerson = new javax.swing.JButton();
        btnViewUpdatePerson = new javax.swing.JButton();
        btnRemovePerson = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        lblManagePersons.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        lblManagePersons.setForeground(new java.awt.Color(0, 0, 102));
        lblManagePersons.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManagePersons.setText("Manage Persons");
        lblManagePersons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblPersonDetails.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        tblPersonDetails.setForeground(new java.awt.Color(0, 0, 102));
        tblPersonDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person Name", "Email", "Phone Number", "Date of Birth", "Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPersonDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblPersonDetails);

        btnCreateNewPerson.setBackground(new java.awt.Color(0, 0, 102));
        btnCreateNewPerson.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnCreateNewPerson.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateNewPerson.setText("Create New Person");
        btnCreateNewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewPersonActionPerformed(evt);
            }
        });

        btnViewUpdatePerson.setBackground(new java.awt.Color(0, 0, 102));
        btnViewUpdatePerson.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnViewUpdatePerson.setForeground(new java.awt.Color(255, 255, 255));
        btnViewUpdatePerson.setText("View / Update Person");
        btnViewUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUpdatePersonActionPerformed(evt);
            }
        });

        btnRemovePerson.setBackground(new java.awt.Color(0, 0, 102));
        btnRemovePerson.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnRemovePerson.setForeground(new java.awt.Color(255, 255, 255));
        btnRemovePerson.setText("Remove Person");
        btnRemovePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePersonActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(0, 0, 102));
        btnRefresh.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblManagePersons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnViewUpdatePerson)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addComponent(btnRemovePerson)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(btnCreateNewPerson))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRefresh)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblManagePersons)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateNewPerson)
                    .addComponent(btnViewUpdatePerson)
                    .addComponent(btnRemovePerson))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateNewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewPersonActionPerformed
        // TODO add your handling code here:
        CreatePersonJPanel panel = new CreatePersonJPanel(workContainer, enterprise);
        workContainer.add("CreateEmployeeJPanel", panel);
        CardLayout layout = (CardLayout)workContainer.getLayout();
        layout.next(workContainer);
    }//GEN-LAST:event_btnCreateNewPersonActionPerformed

    private void btnViewUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUpdatePersonActionPerformed
        // TODO add your handling code here:
        int row = tblPersonDetails.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a Person from table");
            return;
        }
        Person person = (Person)tblPersonDetails.getValueAt(row, 0);
        Organization org = (Organization) tblPersonDetails.getValueAt(row, 4);

        ViewPersonJPanel panel = new ViewPersonJPanel(workContainer, person, org);
        workContainer.add("ViewPersonJPanel", panel);
        CardLayout layout = (CardLayout)workContainer.getLayout();
        layout.next(workContainer);
    }//GEN-LAST:event_btnViewUpdatePersonActionPerformed

    private void btnRemovePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePersonActionPerformed
        // TODO add your handling code here:
        int row = tblPersonDetails.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a Person from table");
            return;
        }

        Person person = (Person)tblPersonDetails.getValueAt(row, 0);
        Organization organize = (Organization) tblPersonDetails.getValueAt(row, 4);

        organize.getPersonDirectory().removePerson(person);
        populatePersonTable();

    }//GEN-LAST:event_btnRemovePersonActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populatePersonTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateNewPerson;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemovePerson;
    private javax.swing.JButton btnViewUpdatePerson;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblManagePersons;
    private javax.swing.JTable tblPersonDetails;
    // End of variables declaration//GEN-END:variables
}
