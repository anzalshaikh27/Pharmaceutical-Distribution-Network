/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Manufacture;

import Business.EcoSystem;
import Business.NationalEnterprise.Manufacturer;
import Business.Organization.ManufactureOrganization;
import Business.Organization.Organization;
import Business.Vaccine.VaccineDetails;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author zakir
 */
public class ManageDrugsListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageDrugsListJPanel
     */
    private final JPanel workContainer;
    private final Manufacturer manufacturer;
    private final EcoSystem business;
    
    public ManageDrugsListJPanel(JPanel workContainer, Manufacturer manufacturer, EcoSystem business) {
        initComponents();
        this.workContainer = workContainer;
        this.manufacturer = manufacturer;
        this.business = business;
        populateTable();
        searchInTable();
        
    }
    
    private void populateTable(){
        
         DefaultTableModel defaulttabelmodel = (DefaultTableModel) tblDrugDetails.getModel();
        defaulttabelmodel.setRowCount(0);
        
        ManufactureOrganization manufacureOrg = null;
        for(Organization org : manufacturer.getOrganizationDirectory().getOrganizationList())
        {   if(org instanceof ManufactureOrganization)
        {   manufacureOrg = (ManufactureOrganization)org;
            for(VaccineDetails vaccine : manufacureOrg.getVaccineProductCatalog().getVaccineProductList())
            {Object[] row = new Object[7];
            row[0] = vaccine;
            row[1] = vaccine.getVaccineDefinition().getVaccineName();
            row[2] = vaccine.getVaccineId();
            row[3] = vaccine.getBatchId();
            row[4] = vaccine.getVaccinePrice();
            row[5] = vaccine.getAvailablity();
            row[6] = vaccine.getManufactureDate();
            defaulttabelmodel.addRow(row);
            }
        }
        }
        
        
        
    }
    
    
    private void searchVaccine(String vaccineCode){
         DefaultTableModel defaulttabelmodel = (DefaultTableModel) tblDrugDetails.getModel();
        defaulttabelmodel.setRowCount(0);
        
        ManufactureOrganization manufacureOrg = null;
        for(Organization org : manufacturer.getOrganizationDirectory().getOrganizationList())
        {   if(org instanceof ManufactureOrganization)
        {   manufacureOrg = (ManufactureOrganization)org;
            for(VaccineDetails vaccine : manufacureOrg.getVaccineProductCatalog().getVaccineProductList())
            {
                if(vaccineCode.equalsIgnoreCase(vaccine.getVaccineDefinition().getVaccineCode()))
                {
                Object[] row = new Object[7];
            
                row[0] = vaccine;
                row[1] = vaccine.getVaccineDefinition().getVaccineName();
                row[2] = vaccine.getVaccineId();
                row[3] = vaccine.getBatchId();
                row[4] = vaccine.getVaccinePrice();
                row[5] = vaccine.getAvailablity();
                row[6] = vaccine.getManufactureDate();
                defaulttabelmodel.addRow(row);
                }
            }
        }
        
        
        
        
    }
    }
    
    private void searchInTable(){
        DefaultTableModel model = (DefaultTableModel) tblDrugDetails.getModel();
        TableRowSorter sorter = new TableRowSorter<>(model);
        tblDrugDetails.setRowSorter(sorter);
        txtSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                search(txtSearch.getText()); 
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                search(txtSearch.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                search(txtSearch.getText());
            }

            private void search(String str) {
                if (str.length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter(str));
                }
            }
            
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrugDetails = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnRemovevaccDrug = new javax.swing.JButton();
        btnAddDrug = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        lblTitle.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Medicines");
        lblTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblDrugDetails.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        tblDrugDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Code", "Drug Name", "Drug id", "Lot Number", "Price", "Availability", "Manufacture date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDrugDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblDrugDetails);

        btnRefresh.setBackground(new java.awt.Color(0, 0, 102));
        btnRefresh.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(0, 0, 102));
        lblSearch.setText("Type to Search:");

        btnRemovevaccDrug.setBackground(new java.awt.Color(0, 0, 102));
        btnRemovevaccDrug.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnRemovevaccDrug.setForeground(new java.awt.Color(255, 255, 255));
        btnRemovevaccDrug.setText("Remove Vaccine");
        btnRemovevaccDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovevaccDrugActionPerformed(evt);
            }
        });

        btnAddDrug.setBackground(new java.awt.Color(0, 0, 102));
        btnAddDrug.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnAddDrug.setForeground(new java.awt.Color(255, 255, 255));
        btnAddDrug.setText("Add Drug");
        btnAddDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDrugActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRemovevaccDrug)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddDrug))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemovevaccDrug)
                    .addComponent(btnAddDrug))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnRefresh, lblSearch, txtSearch});

    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnRemovevaccDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovevaccDrugActionPerformed
        // TODO add your handling code here:
         int row = tblDrugDetails.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a Vaccine from table");
            return;
        }
        VaccineDetails vaccine = (VaccineDetails)tblDrugDetails.getValueAt(row, 0);
        ManufactureOrganization manufactureOrg = null;
        for(Organization org: manufacturer.getOrganizationDirectory().getOrganizationList())
        {   if(org instanceof ManufactureOrganization)
        { manufactureOrg = (ManufactureOrganization)org;
            for(VaccineDetails vaccineProduct : manufactureOrg.getVaccineProductCatalog().getVaccineProductList())
            {
                if(vaccine.equals(vaccineProduct))
                    manufactureOrg.getVaccineProductCatalog().removeVaccineProduct(vaccineProduct);
            }
        }
        }

        populateTable();
        
        
    }//GEN-LAST:event_btnRemovevaccDrugActionPerformed

    private void btnAddDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDrugActionPerformed
        // TODO add your handling code here:
         AddNewDrugJPanel panel = new AddNewDrugJPanel(workContainer, manufacturer, business);
        workContainer.add("AddNewVaccineJPanel", panel);
        CardLayout layout = (CardLayout)workContainer.getLayout();
        layout.next(workContainer);
        
    }//GEN-LAST:event_btnAddDrugActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDrug;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemovevaccDrug;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblDrugDetails;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
