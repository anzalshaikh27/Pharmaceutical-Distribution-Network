/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.FDA;

import Business.EcoSystem;
import Business.NationalEnterprise.FDA;
import Business.Order.OrderItem;
import Business.Organization.FDAOrganization;
import Business.Organization.DistributorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ProviderVaccineOrderWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author anzal
 */
public class ApproveOrder extends javax.swing.JPanel {

    private final JPanel workContainer;
    private final UserAccount userAccount;
    private final EcoSystem business;
    private final FDA cdcEnterprise;
    private final FDAOrganization cdcOrg;
    private final ProviderVaccineOrderWorkRequest request;
    /**
     * Creates new form ApproveOrder
     * @param workContainer
     * @param userAccount
     * @param cdcEnterprise
     * @param cdcOrg
     * @param business
     * @param request
     */
    public ApproveOrder(JPanel workContainer, UserAccount userAccount,FDA cdcEnterprise,FDAOrganization cdcOrg,EcoSystem business,ProviderVaccineOrderWorkRequest request ) {
        initComponents();
        this.workContainer = workContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.cdcEnterprise =cdcEnterprise;
        this.request =request;
        this.cdcOrg = cdcOrg;
        txtState.setText(String.valueOf(request.getreqState()));
        txtStatePopulation.setText(String.valueOf(request.getreqState().getStatePopulation()));
        txtMedicineStock.setText(String.valueOf(request.getreqState().getVaccinesLeftForState()));
        txtOrderNumber.setText(String.valueOf(request.getVaccineOrder().getOrderNumber()));
        displayContractDetails();
        populateTable();

    }
    
    private void displayContractDetails(){
        
        if(request.ishalfmonthContract())
            txtOrderType.setText("Half Monthly");
        if(request.isfullMonthContract())
            txtOrderType.setText("Monthly");
        if(request.isasReq())
            txtOrderType.setText("As Required");
        
    }
    
    private void populateTable(){
        
         int rowCount = tblDrugApproval.getRowCount();
        DefaultTableModel defaulttabelmodel = (DefaultTableModel)tblDrugApproval.getModel();
        
        for(int i=rowCount-1 ; i>=0; i--){
            defaulttabelmodel.removeRow(i);
        }
        
        for(OrderItem oi: request.getVaccineOrder().getItemList())
        {
            Object[] row = new Object[8];
            
                row[0] = oi.getVaccineDetails();
                row[1] = oi;
                row[2] = oi.getVaccineDetails().getVaccineId();
                row[3] = oi.getVaccineDetails().getBatchId();
                row[4] = oi.getVaccineDetails().getVaccinePrice();row[5] = oi.getQuantity();
                row[6] = oi.getVaccineDetails().getManufactureDate();
                row[7] = oi.getVaccineDetails().getVaccinePrice()*oi.getQuantity();
                defaulttabelmodel.addRow(row);
     
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblOrderNumber = new javax.swing.JLabel();
        txtOrderNumber = new javax.swing.JTextField();
        lblStatePopulation = new javax.swing.JLabel();
        txtStatePopulation = new javax.swing.JTextField();
        lblMedicineLeftForState = new javax.swing.JLabel();
        txtMedicineStock = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDrugApproval = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnApproveOrder = new javax.swing.JButton();
        txtOrderType = new javax.swing.JTextField();
        lblOrderType = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Approve Orders");
        lblTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 673, -1));

        lblOrderNumber.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lblOrderNumber.setText("Order Number:");
        add(lblOrderNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 90, -1));

        txtOrderNumber.setEnabled(false);
        add(txtOrderNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 100, -1));

        lblStatePopulation.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lblStatePopulation.setText("State Population:");
        add(lblStatePopulation, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 130, -1));

        txtStatePopulation.setEnabled(false);
        add(txtStatePopulation, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 90, -1));

        lblMedicineLeftForState.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lblMedicineLeftForState.setText("Medicines left for State:");
        add(lblMedicineLeftForState, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 150, 150, -1));

        txtMedicineStock.setEnabled(false);
        add(txtMedicineStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 90, -1));

        tblDrugApproval.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        tblDrugApproval.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Code", "Medicine Name", "Medicine ID", "Lot Number", "Price", "Quantity", "Manufacture date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDrugApproval.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblDrugApproval);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 673, 207));

        btnBack.setBackground(new java.awt.Color(0, 0, 102));
        btnBack.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 90, 30));

        btnApproveOrder.setBackground(new java.awt.Color(0, 0, 102));
        btnApproveOrder.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnApproveOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnApproveOrder.setText("Approve");
        btnApproveOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnApproveOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveOrderActionPerformed(evt);
            }
        });
        add(btnApproveOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 410, 120, -1));

        txtOrderType.setEnabled(false);
        add(txtOrderType, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, 120, -1));

        lblOrderType.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lblOrderType.setText("Order type:");
        add(lblOrderType, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 110, 70, -1));

        lblState.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lblState.setText("State:");
        add(lblState, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 110, 80, -1));

        txtState.setEnabled(false);
        add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 100, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnApproveOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveOrderActionPerformed
        // TODO add your handling code here:
if(request.getStatus().equalsIgnoreCase("CDC Approved") ||request.getStatus().equalsIgnoreCase("Rejected")|| request.getStatus().equalsIgnoreCase("Shipped") )
        {
            JOptionPane.showMessageDialog(null, "Order has already been processed!");
             return;
        }
        
        int totalOrderedQuantity =0;
        for(OrderItem oi : request.getVaccineOrder().getItemList())
        {
            totalOrderedQuantity = totalOrderedQuantity + oi.getQuantity();
        }
        
        
        if(totalOrderedQuantity > request.getreqState().getVaccinesLeftForState())
        {
            JOptionPane.showMessageDialog(null, "Order has reached maximum value available vaccines for state");
            request.setStatus("Rejected");
            return;
            
        }
        
        
        DistributorOrganization distOrg = null;
        for(Organization org: business.getDistributor().getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof DistributorOrganization)
            {
                org.getWorkQueue().addWorkRequest(request);
            }
        }
        
  
        request.setApprovedByCDC(true);
        request.setCdcApprovedBy(userAccount);
        request.setStatus("CDC Approved");
        
        int countLeft = request.getreqState().getVaccinesLeftForState();
        request.getreqState().setVaccinesLeftForState(countLeft-totalOrderedQuantity);
        
        JOptionPane.showMessageDialog(null, "Order passed to Distributor!");
    }//GEN-LAST:event_btnApproveOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproveOrder;
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMedicineLeftForState;
    private javax.swing.JLabel lblOrderNumber;
    private javax.swing.JLabel lblOrderType;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStatePopulation;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblDrugApproval;
    private javax.swing.JTextField txtMedicineStock;
    private javax.swing.JTextField txtOrderNumber;
    private javax.swing.JTextField txtOrderType;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStatePopulation;
    // End of variables declaration//GEN-END:variables
}
